<project name="xmpp-proxy" basedir="." default="main">


    <property name="src.dir"     value="src"/>

    <property name="build.dir"   value="build"/>
    <property name="classes.dir" value="${build.dir}/classes"/>
    <property name="jar.dir"     value="${build.dir}/jar"/>
    <property name="lib.dir"     value="lib"/>

    <property name="main-class"  value="ch.mst.xmpp_reverse_proxy"/>


    <path id="classpath">
        <fileset dir="${lib.dir}" includes="*.jar"/>
    </path>

    <path id="build.classpath">
	    <fileset dir="${basedir}/">
		    <include name="${lib.dir}/*.jar"/>
	    </fileset>
    </path>

    <pathconvert property="mf.classpath" pathsep=" ">
	    <path refid="build.classpath"/>
	    <mapper>
		    <chainedmapper>
			    <flattenmapper/>
			    <globmapper from="*.jar" to="lib/*.jar"/>
		    </chainedmapper>
	    </mapper>
    </pathconvert>

    <target name="clean">
        <delete dir="${build.dir}"/>
    </target>

    <target name="compile">
        <mkdir dir="${classes.dir}"/>
        <javac srcdir="${src.dir}" destdir="${classes.dir}" classpathref="classpath" includeantruntime="false" />
    </target>

    <target name="jar" depends="compile">
        <mkdir dir="${jar.dir}"/>
        <jar destfile="${jar.dir}/${ant.project.name}.jar" basedir="${classes.dir}">
            <zipgroupfileset dir="${lib.dir}" includes="*.jar" excludes=""/>

            <manifest>
                <attribute name="Main-Class" value="${main-class}"/>
                 <attribute name="Class-Path" value="${mf.classpath}"/>
            </manifest>
        </jar>
    </target>


    <target name="run" depends="jar">
        <java fork="true" classname="${main-class}">
            <classpath>
                <path refid="classpath"/>
                <path location="${jar.dir}/${ant.project.name}.jar"/>
            </classpath>
        </java>
    </target>

    <target name="clean-build" depends="clean,jar"/>

    <target name="main" depends="clean,run"/>

</project>
